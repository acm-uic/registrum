name: CI

on:
  push:
  create:
  release:
  pull_request:
  workflow_dispatch:

jobs:
  build-test-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Restore Package Cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install yarn
        run: npm i -g yarn
      - name: Install dependencies
        run: yarn install
      - name: Build projects
        run: yarn build
      - name: Run tests
        run: yarn test
      - name: Publish coverage
        run: yarn coverage

  build-push-docker:
    runs-on: ubuntu-latest
    needs:
      - build-test-node
    strategy:
      fail-fast: false
      matrix:
        project: [api, banner, banner-data, client]
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY_HOST }}
          repository: ${{ github.repository }}/${{ matrix.project }}
          build_args: CLIENT_WEBPUSHPUBLIC=${{ secrets.WEBPUSHPUBLIC }}
          path: .
          dockerfile: docker/${{ matrix.project }}.Dockerfile
          add_git_labels: true
          tag_with_ref: true
          push: ${{ (startsWith(github.ref, 'refs/tags/') || (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/staging')) }}

  trigger-hooks:
    runs-on: ubuntu-latest
    needs:
      - build-push-docker
    steps:
      - name: Trigger Hooks - master
        if: github.ref == 'refs/heads/master'
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.MASTER_HOOK }}'

      - name: Trigger Hooks - staging
        if: github.ref == 'refs/heads/staging'
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.STAGING_HOOK }}'

      - name: Trigger Hooks - release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.PROD_HOOK }}'

  auto-merge:
    runs-on: ubuntu-latest
    needs:
      - build-push-docker
      - build-test-node
    if: github.actor == 'dependabot[bot]' && github.event == 'pull_request'
    steps:
      - name: merge
        uses: actions/github-script@0.2.0
        with:
          script: |
            github.pullRequests.createReview({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              event: 'APPROVE'
            })
            github.pullRequests.merge({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number
            })
          github-token: ${{github.token}}
