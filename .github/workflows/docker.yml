name: Docker CI/CD

on:
  push:
  create:
  release:
  pull_request:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
      webhook:
        description: 'WebHook to trigger'
        required: false

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [api, banner, banner-data, client]

    steps:
    - uses: actions/checkout@v2
    - name: build-image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: ${{ secrets.REGISTRY_HOST }}
        repository: ${{ github.repository }}/${{ matrix.project }}
        build_args: CLIENT_WEBPUSHPUBLIC=${{ secrets.WEBPUSHPUBLIC }}
        dockerfile: docker/${{ matrix.project }}.Dockerfile
        add_git_labels: true
        tag_with_ref: true
        push: ${{ (startsWith(github.ref, 'refs/tags/') || (github.ref == 'refs/heads/master') || (github.ref == 'refs/heads/staging')) }}

  trigger-hooks:
    runs-on: ubuntu-latest
    needs:
    - build-push-image
    steps:
    - name: Trigger Hooks - master
      if: github.ref == 'refs/heads/master'
      run: |
        curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.MASTER_HOOK }}'

    - name: Trigger Hooks - staging
      if: github.ref == 'refs/heads/staging'
      run: |
        curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.STAGING_HOOK }}'

    - name: Trigger Hooks - release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        curl -X POST -H "Content-Type: application/json" -d "{}" '${{ secrets.PROD_HOOK }}'
